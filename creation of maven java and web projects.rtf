{\rtf1\ansi\ansicpg1252\cocoartf2761
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica-Bold;\f1\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;}
\paperw11900\paperh16840\margl1440\margr1440\vieww24220\viewh13980\viewkind0
\deftab720
\pard\pardeftab720\sl276\slmult1\sa200\partightenfactor0

\f0\b\fs28 \cf2 Creation of Maven Java Project:\
\pard\pardeftab720\sl276\slmult1\sa200\partightenfactor0

\fs24 \cf2 Step 1.
\f1\b0  Open Eclipse IDE\

\f0\b Step 2
\f1\b0 . Install Maven Plugin (if not installed)\

\f0\b Step 3
\f1\b0 . Create a New Maven Project\
   \uc0\u9492 \u9472 \u9472  3.1. File -> New -> Project...\
       \uc0\u9492 \u9472 \u9472  3.1.1. Expand "Maven"\
       \uc0\u9492 \u9472 \u9472  3.1.2. Select "Maven Project" and click "Next"\
\

\f0\b Step 4
\f1\b0 . Set Project Configuration\
   \uc0\u9492 \u9472 \u9472  4.1. Select workspace location (default or custom)\
   \uc0\u9492 \u9472 \u9472  4.2. Click "Next"\

\f0\b Step 5
\f1\b0 . Choose Maven Archetype\
   \uc0\u9492 \u9472 \u9472  5.1. Select an archetype(e.g "org.apache.maven.archetypes -> maven-archetype-quickstart 1.4 ")\
   \uc0\u9492 \u9472 \u9472  5.2. Click "Next"\
\

\f0\b Step 
\f1\b0 6. Define Project Metadata\
   \uc0\u9492 \u9472 \u9472  6.1. Group ID: (e.g., com.example)\
   \uc0\u9492 \u9472 \u9472  6.2. Artifact ID: (e.g., my-maven-project)\
   \uc0\u9492 \u9472 \u9472  6.3. Version: (default is usually fine)\
   \uc0\u9492 \u9472 \u9472  6.4. Click "Finish"\

\f0\b Step 7
\f1\b0 . Maven Project Created\
   \uc0\u9492 \u9472 \u9472  7.1. Project structure is generated with a standard Maven layout\
   \uc0\u9492 \u9472 \u9472  7.2. Includes:\
       \uc0\u9492 \u9472 \u9472  src/main/java (for Java source code)\
       \uc0\u9492 \u9472 \u9472  src/test/java (for test code)\
       \uc0\u9492 \u9472 \u9472  pom.xml (Maven configuration file)\
\

\f0\b Step 8
\f1\b0 . Update Project Settings (if needed)\
   \uc0\u9492 \u9472 \u9472  8.1. Right-click on the project -> Maven -> Update Project...\
   \uc0\u9492 \u9472 \u9472  8.2. Ensure dependencies are up to date\
\

\f0\b Step 9
\f1\b0 . Build and Run Maven Project\
   \uc0\u9492 \u9472 \u9472  9.1. Right-click on App.java -> Run As -> Maven Clean\
       \uc0\u9492 \u9472 \u9472  9.1.1. Right-click on App.java -> Run As -> Maven Install\
       \uc0\u9492 \u9472 \u9472  9.1.2. Right-click on App.java -> Run As -> Maven Test\
      \uc0\u9492 \u9472 \u9472  9.1.3. Right-click on App.java -> Run As -> Maven Build\

\f0\b Step 10
\f1\b0 . In the Maven Build dialog:\
    \uc0\u9492 \u9472 \u9472  Enter Goals: clean install test\
    \uc0\u9492 \u9472 \u9472  Click on Apply -> Click on Run\

\f0\b Step 11
\f1\b0 . Check console for BUILD SUCCESS message.\
\
\

\f0\b Step 12
\f1\b0 . Run the application:\
    \uc0\u9492 \u9472 \u9472  Right-click on App.java -> Run As -> Java Application\
    \uc0\u9492 \u9472 \u9472  Output: "Hello World" displayed.\
\
\
\pard\pardeftab720\sl276\slmult1\sa200\partightenfactor0

\f0\b\fs28 \cf2 Creation of Maven web Java Project\
\pard\pardeftab720\sl276\slmult1\sa200\partightenfactor0

\fs24 \cf2 Step 1
\f1\b0 : Open Eclipse\
   \uc0\u9492 \u9472 \u9472  1.1 Launch Eclipse IDE.\
   \uc0\u9492 \u9472 \u9472  1.2 Select or create a workspace.\

\f0\b Step 2
\f1\b0 : Create a New Maven Project\
   \uc0\u9492 \u9472 \u9472  2.1. File -> New -> Project...\
       \uc0\u9492 \u9472 \u9472  2.1.1. Expand "Maven"\
       \uc0\u9492 \u9472 \u9472  2.1.2. Select "Maven Project" and click "Next"\

\f0\b Step 3
\f1\b0 : Choose Maven Archetype\
   \uc0\u9492 \u9472 \u9472  3.1. Select an archetype(e.g "'org.apache.maven.archetypes' -> 'maven-archetype-webapp' 1.4 ")\
   \uc0\u9492 \u9472 \u9472  3.2. Click "Next"\

\f0\b Step 4
\f1\b0 : Configure the Maven Project\
   \uc0\u9492 \u9472 \u9472  4.1 Group Id: Enter a group ID (e.g., com.example).\
   \uc0\u9492 \u9472 \u9472  4.2 Artifact Id: Enter an artifact ID (e.g., my-web-app).\
   \uc0\u9492 \u9472 \u9472  4.3 Click **Finish** to create the project.\

\f0\b Go to browser -> Open mvnrepository.com\
 Search for 'Java Servlet API' -> Select the latest version.\
 Copy the dependency code -> Paste it in MavenWeb\'92s pom.xml under the target folder\

\f1\b0  
\f0\b Step 6
\f1\b0 :-. Configure server:\
    \uc0\u9492 \u9472 \u9472  Window -> Show View -> Servers\
    \uc0\u9492 \u9472 \u9472  Add server -> Select Tomcat v9.0 server -> Click Next\
    \uc0\u9492 \u9472 \u9472  Configure server options (e.g., ports, server location).\

\f0\b Step 7
\f1\b0 :-. Modify 'tomcat-users.xml':\
    \uc0\u9492 \u9472 \u9472  Add role and user details under <tomcat-users> tag.\
\pard\pardeftab720\sl276\slmult1\sa200\partightenfactor0

\f0\b \cf2 Step 8
\f1\b0 :. Build the project:\
    \uc0\u9492 \u9472 \u9472  Right-click on index.jsp -> Run As -> Maven Clean\
    \uc0\u9492 \u9472 \u9472  Right-click on index.jsp -> Run As -> Maven Install\
    \uc0\u9492 \u9472 \u9472  Right-click on index.jsp -> Run As -> Maven Test\
    \uc0\u9492 \u9472 \u9472  Right-click on index.jsp -> Run As -> Maven Build\

\f0\b Step 9
\f1\b0 . In the Maven Build dialog:\
    \uc0\u9492 \u9472 \u9472  Enter Goals: clean install test\
    \uc0\u9492 \u9472 \u9472  Click on Apply -> Click on Run\
	\

\f0\b Step 10
\f1\b0 . Check console for BUILD SUCCESS message.\

\f0\b Step 11
\f1\b0 . Run the application:\
    \uc0\u9492 \u9472 \u9472  Right-click on index.jsp -> Run As -> Run on Server\
    \uc0\u9492 \u9472 \u9472  Select the Tomcat server -> Click on Finish\

\f0\b Step 12
\f1\b0 . Output: "Hello World" webpage displayed.\
\pard\pardeftab720\sl276\slmult1\sa200\partightenfactor0
\cf2 \
\
\
}